<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>node on Marc Gibbons</title>
    <link>/tags/node/</link>
    <description>Recent content in node on Marc Gibbons</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 24 Sep 2017 14:04:30 -0400</lastBuildDate>
    
	<atom:link href="/tags/node/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>When Not to User Docker</title>
      <link>/post/when-not-to-user-docker/</link>
      <pubDate>Sun, 24 Sep 2017 14:04:30 -0400</pubDate>
      
      <guid>/post/when-not-to-user-docker/</guid>
      <description>Docker is a great tool, particularly for development environments on projects with complex dependencies: multiple databases, caches, message queues, asynchronous workers. Docker compose provides a great wrapper to link all these dependencies into a simple, developer-friendly API.
There are some trade-offs: containers need to be rebuilt when package dependencies change, port forwarding and volume mounts can be akward, and when not running natively on a Linux host, performance tends to take a hit (e.</description>
    </item>
    
  </channel>
</rss>