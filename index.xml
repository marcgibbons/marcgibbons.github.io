<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Marc Gibbons</title>
    <link>/</link>
    <description>Recent content on Marc Gibbons</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 24 Sep 2017 14:04:30 -0400</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>When Not to User Docker</title>
      <link>/post/when-not-to-user-docker/</link>
      <pubDate>Sun, 24 Sep 2017 14:04:30 -0400</pubDate>
      
      <guid>/post/when-not-to-user-docker/</guid>
      <description>Docker is a great tool, particularly for development environments on projects with complex dependencies: multiple databases, caches, message queues, asynchronous workers. Docker compose provides a great wrapper to link all these dependencies into a simple, developer-friendly API.
There are some trade-offs: containers need to be rebuilt when package dependencies change, port forwarding and volume mounts can be akward, and when not running natively on a Linux host, performance tends to take a hit (e.</description>
    </item>
    
    <item>
      <title>New Project Checklist</title>
      <link>/post/new-project-checklist/</link>
      <pubDate>Fri, 22 Sep 2017 18:03:49 -0400</pubDate>
      
      <guid>/post/new-project-checklist/</guid>
      <description>New projects are exciting. Green field. Carte blanche. They are an opportunity to do things the &amp;ldquo;right&amp;rdquo; way, upgrade to the latest versions, use a new framework and apply new design or development techniques.
Starting a new project is also an enormous responsibility &amp;ndash; decisions made at this embryonic stage will have lasting benefits (or consequences) and it&amp;rsquo;s critical that sufficient effort be dedicated to achieve a modern, professional standard.</description>
    </item>
    
    <item>
      <title>Mind Your Brackets</title>
      <link>/post/mind-your-brackets/</link>
      <pubDate>Thu, 07 Sep 2017 08:00:00 -0400</pubDate>
      
      <guid>/post/mind-your-brackets/</guid>
      <description>Those who work with me know that I am an advocate of 80 character line limits. This comes naturally as a Python developer and I apply the same limit to Javascript, HTML, Dockerfiles, Markdown, etc. This post won&amp;rsquo;t try to convince you to respect the 80 char limit (though you should), it will cover one of the main challenges of writing code with a length constraint: What do I do when I reach the end of the line and I still have code to write?</description>
    </item>
    
    <item>
      <title>Hello World!</title>
      <link>/post/hello-world/</link>
      <pubDate>Thu, 24 Aug 2017 10:29:12 -0400</pubDate>
      
      <guid>/post/hello-world/</guid>
      <description>At last, I have published a blog.
Here, I will chronicle (and rant) about code quality, software design, and most importantly, BBQ.
As developers, we learn new things every day, and I think it&amp;rsquo;s important to record these findings, call out the good, the bad and the ugly in the hope of helping others, or even, our future selves.
Enjoy!</description>
    </item>
    
  </channel>
</rss>